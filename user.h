struct stat;
#define NULL ((void *)(-1))
// system calls
int fork(void);
int exit(int) __attribute__((noreturn));
int _exit(int) __attribute__((noreturn));
int wait(void);
int pipe(int*);
int write(int, void*, int);
int read(int, void*, int);
int close(int);
int kill(int);
int exec(char*, char**);
int execve(char*, char**,char **);
int open(char*, int);
int mknod(char*, short, short);
int unlink(char*);
int fstat(int fd, struct stat*);
int link(char*, char*);
int mkdir(char*);
int chdir(char*);
int dup(int);
int getpid(void);
char* sbrk(int);
int sleep(int);
int uptime(void);
int lseek(int,int,int);
int mmap(void *addr, int len, int prot, int flags, int fd, int offset);
// ulib.c
int stat(char*, struct stat*);
char* strcpy(char*, char*);
char* strncpy(char*, char*,int);
void *memmove(void*, void*, int);
void *memcpy(void*, void*, int);
char* strchr(const char*, char c);
char* strcat(char *,char *);
int strcmp(const char*, const char*);
int strncmp(const char*, const char*,int);
int sprintf(char *,char *, ...);
int snprintf(char *str,int n,char *fmt,...);
int printf(char*, ...);
char* gets(char*, int max);
uint strlen(char*);
void* memset(void*, int, uint);
void* malloc(uint);
void free(void*);
int atoi(const char*);
double pow(double x, double y);
double exp(double d); 
double log(double d);
